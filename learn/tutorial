//It is important to import the right files to run the robot
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotor;

@TeleOp(name = "Tutorial")//This names the teleop mode on the driver hub
public class Tutorial extends LinearOpMode {//This is where the actual code starts

private DcMotor leftHorizSlide;// this is creating a motor name
public void runOpMode() {
    leftHorizSlide = hardwareMap.get(DcMotor.class, "leftHorizSlide");// This is mapping the motorname to the port

    waitForStart();//Waits for the human to press start
    if (opModeIsActive()) {
      while (opModeIsActive()) {	//forever loop for when the start button is pressed
        Code();//this is a funtion
      }
    }
  }
  
  public void Code(){     //funtion Code
  //define varibles
/*The types:
String - Words (HelloWorld)
Int - Whole Number(1,-3,100)
Float - Numbers with Decimals (3.14)
Double - Number with long decimals (3.1415926)
*/
  float slidepwr;
  if (opModeIsActive()) {//saying if the code has 
started then do following
      while (opModeIsActive()) {// this si saying while the code is on do the following
      //gamepad controls
   	   slidepwr = gamepad1.left_stick_y;
      //motor commands
       leftHorizSlide.setDirection(DcMotor.Direction.REVERSE);
       leftHorizSlide.setPower(slidepwr);//0 through 1
       
      //Telemetry commands
      telemetry.addLine("Left Horizontal Slide");
      telemetry.addData("Slide Power", slidepwr);
      telemetry.update();
 
  	
  
  
			}
		}
	}
}
