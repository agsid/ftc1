package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DcMotorSimple;

@TeleOp(name = "SidCode_New", group = "Linear OpMode") // Changed name to indicate brake behavior
public class SidCode extends LinearOpMode {

    private DcMotor leftHorizSlide = null;
    private DcMotor leftSlide = null;
    private DcMotor rightSlide = null;
    private DcMotor left_back = null;
    private DcMotor left_front = null;
    private DcMotor right_back = null;
    private DcMotor right_front = null;

    // Define a small holding power and a joystick deadband
    private static final double SLIDE_HOLDING_POWER = 0.08; // Adjust this value (e.g., 0.05 to 0.15)
    private static final double JOYSTICK_DEADBAND = 0.1; // Joystick input below this won't move the motor

    @Override
    public void runOpMode() {
        // Initialize motors by mapping them to hardware
        left_back = hardwareMap.get(DcMotor.class, "left_back");
        left_front = hardwareMap.get(DcMotor.class, "left_front");
        right_back = hardwareMap.get(DcMotor.class, "right_back");
        right_front = hardwareMap.get(DcMotor.class, "right_front");

        leftHorizSlide = hardwareMap.get(DcMotor.class, "leftHorizSlide");
        leftSlide = hardwareMap.get(DcMotor.class, "leftSlide");
        rightSlide = hardwareMap.get(DcMotor.class, "rightSlide");

        // Set initial motor directions
        left_back.setDirection(DcMotor.Direction.REVERSE);
        left_front.setDirection(DcMotor.Direction.REVERSE);
        right_back.setDirection(DcMotor.Direction.FORWARD);
        right_front.setDirection(DcMotor.Direction.FORWARD);

        // Your slide directions. Assuming FORWARD power lifts the slide.
        leftHorizSlide.setDirection(DcMotor.Direction.FORWARD);
        leftSlide.setDirection(DcMotor.Direction.FORWARD); // Assuming FORWARD makes it go UP
        rightSlide.setDirection(DcMotor.Direction.REVERSE); // Assuming REVERSE makes it go UP (to match leftSlide)

        // --- NEW: Set ZeroPowerBehavior for the slides ---
        // BRAKE mode will actively resist external forces (like gravity) when power is zero or very low.
        leftSlide.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
        rightSlide.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);

        // Wait for the game to start (driver presses PLAY)
        waitForStart();

        // Run until the end of the match (driver presses STOP)
        while (opModeIsActive()) {
            // Get joystick inputs
            double drive = -gamepad1.left_stick_y;
            double strafe = gamepad1.left_stick_x;
            double turn = gamepad1.right_stick_x;

            // Calculate power for each drive wheel
            double leftFrontPower = drive + turn + strafe;
            double leftBackPower = drive + turn - strafe;
            double rightFrontPower = drive - turn - strafe;
            double rightBackPower = drive - turn + strafe;

            // Apply power to drive motors
            left_front.setPower(leftFrontPower);
            left_back.setPower(leftBackPower);
            right_front.setPower(rightFrontPower);
            right_back.setPower(rightBackPower);

            // Control horizontal slide motor with dpad
            if (gamepad1.dpad_up) {
                leftHorizSlide.setPower(0.5);
            } else if (gamepad1.dpad_down) {
                leftHorizSlide.setPower(-0.5);
            } else {
                leftHorizSlide.setPower(0);
            }

            // --- HOLDING POWER LOGIC FOR VERTICAL SLIDES ---
            double leftSlidePower = -gamepad2.left_stick_y;
            double rightSlidePower = -gamepad2.right_stick_y;

            // Apply deadband to joystick input
            if (Math.abs(leftSlidePower) < JOYSTICK_DEADBAND) {
                // If joystick is near center, apply holding power
                leftSlidePower = SLIDE_HOLDING_POWER;
            }
            if (Math.abs(rightSlidePower) < JOYSTICK_DEADBAND) {
                // If joystick is near center, apply holding power
                rightSlidePower = SLIDE_HOLDING_POWER;
            }

            // Apply power to vertical slide motors
            leftSlide.setPower(leftSlidePower);
            rightSlide.setPower(rightSlidePower);


            // Add telemetry for debugging (optional)
            telemetry.addData("Status", "Running");
            telemetry.addData("LeftFront Power", leftFrontPower);
            telemetry.addData("LeftBack Power", leftBackPower);
            telemetry.addData("RightFront Power", rightFrontPower);
            telemetry.addData("RightBack Power", rightBackPower);
            telemetry.addData("Left Slide Power", leftSlidePower);
            telemetry.addData("Right Slide Power", rightSlidePower);
            telemetry.update();
        }
    }
}
