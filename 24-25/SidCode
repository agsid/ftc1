package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DcMotorSimple;

@TeleOp(name = "SidCode_New", group = "Linear OpMode")
public class SidCode extends LinearOpMode {

    private DcMotor leftHorizSlide = null;
    private DcMotor leftSlide = null;
    private DcMotor rightSlide = null;
    private DcMotor left_back = null;
    private DcMotor left_front = null;
    private DcMotor right_back = null;
    private DcMotor right_front = null;

    // Define a small holding power and a joystick deadband
    private static final double SLIDE_HOLDING_POWER = -0.15; // Adjust this value (e.g., 0.05 to 0.15)
    private static final double JOYSTICK_DEADBAND = 0.1; // Joystick input below this won't move the motor

    @Override
    public void runOpMode() {
        // Initialize motors by mapping them to hardware
        left_back = hardwareMap.get(DcMotor.class, "left_back");
        left_front = hardwareMap.get(DcMotor.class, "left_front");
        right_back = hardwareMap.get(DcMotor.class, "right_back");
        right_front = hardwareMap.get(DcMotor.class, "right_front");

        leftHorizSlide = hardwareMap.get(DcMotor.class, "leftHorizSlide");
        leftSlide = hardwareMap.get(DcMotor.class, "leftSlide");
        rightSlide = hardwareMap.get(DcMotor.class, "rightSlide");

        // Set initial motor directions
        left_back.setDirection(DcMotor.Direction.REVERSE);
        left_front.setDirection(DcMotor.Direction.REVERSE);
        right_back.setDirection(DcMotor.Direction.FORWARD);
        right_front.setDirection(DcMotor.Direction.FORWARD);

        // Your slide directions. Assuming FORWARD power lifts the slide.
        leftHorizSlide.setDirection(DcMotor.Direction.FORWARD);
        leftSlide.setDirection(DcMotor.Direction.FORWARD);
        rightSlide.setDirection(DcMotor.Direction.REVERSE);

        // Set ZeroPowerBehavior for the slides
        leftSlide.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
        rightSlide.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);

        // Wait for the game to start (driver presses PLAY)
        waitForStart();

        // Run until the end of the match (driver presses STOP)
        while (opModeIsActive()) {
            // Get joystick inputs
            double drive = -gamepad1.left_stick_y;
            double strafe = gamepad1.left_stick_x;
            double turn = gamepad1.right_stick_x;

            // Calculate power for each drive wheel
            double leftFrontPower = drive + turn + strafe;
            double leftBackPower = drive + turn - strafe;
            double rightFrontPower = drive - turn - strafe;
            double rightBackPower = drive - turn + strafe;

            // Apply power to drive motors
            left_front.setPower(leftFrontPower);
            left_back.setPower(leftBackPower);
            right_front.setPower(rightFrontPower);
            right_back.setPower(rightBackPower);

            // Control horizontal slide motor with dpad and add rumble effect
            if (gamepad2.dpad_up) {
                leftHorizSlide.setPower(0.5);
                // Rumble lightly when moving the horizontal slide up
                gamepad2.rumble(0.2, 0.2, 50); // Left rumble, Right rumble, Duration in milliseconds
            } else if (gamepad2.dpad_down) {
                leftHorizSlide.setPower(-0.5);
                // Rumble lightly when moving the horizontal slide down
                gamepad2.rumble(0.2, 0.2, 50);
            } else {
                leftHorizSlide.setPower(0);
                // Stop rumble when the slide is not moving
                gamepad2.rumble(0, 0, 0); // Stops any ongoing rumble
            }

            // HOLDING POWER LOGIC FOR VERTICAL SLIDES
            double leftSlidePower = -gamepad2.left_stick_y;

            // Apply deadband to joystick input
            if (Math.abs(leftSlidePower) < JOYSTICK_DEADBAND) {
                leftSlidePower = SLIDE_HOLDING_POWER;
            }

            // Apply power to vertical slide motors
            leftSlide.setPower(leftSlidePower);
            rightSlide.setPower(leftSlidePower);


            // Add telemetry for debugging (optional)
            telemetry.addData("LeftFront Power", leftFrontPower);
            telemetry.addData("LeftBack Power", leftBackPower);
            telemetry.addData("RightFront Power", rightFrontPower);
            telemetry.addData("RightBack Power", rightBackPower);
            telemetry.addData("Slide Power", leftSlidePower);

            telemetry.update();
        }
    }
}
